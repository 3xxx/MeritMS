{
    "swagger": "2.0",
    "info": {
        "title": "MeritMS API",
        "description": "MeritMS has every tool to get any job done, so codename for the new MeritMS APIs.",
        "version": "1.0.0",
        "contact": {
            "email": "504284@qq.com"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/admin/category/addcategory": {
            "post": {
                "tags": [
                    "admin"
                ],
                "description": "Get Category list by title info",
                "operationId": "AdminController.Post Category by pid title code grade",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pid",
                        "description": "parentid of category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "title of category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "code of category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "grade",
                        "description": "grade of category",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.AddAdminCategory"
                        }
                    }
                }
            }
        },
        "/admin/category/{id}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "Get Category list by some info",
                "operationId": "AdminController.Get Category list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "category id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.GetAdminCategory"
                        }
                    }
                }
            }
        },
        "/admin/categorytitle": {
            "get": {
                "tags": [
                    "admin"
                ],
                "description": "Get Category list by title info",
                "operationId": "AdminController.Get Category by title",
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "description": "title of search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.GetAdminCategory"
                        }
                    }
                }
            }
        },
        "/adminlog/errlog": {
            "get": {
                "tags": [
                    "adminlog"
                ],
                "description": "get log list",
                "operationId": "AdminLogController.getAdminBlock",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.success"
                        }
                    },
                    "400": {
                        "description": "Invalid page"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/adminlog/infolog": {
            "get": {
                "tags": [
                    "adminlog"
                ],
                "description": "get log list",
                "operationId": "AdminLogController.getAdminBlock",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.success"
                        }
                    },
                    "400": {
                        "description": "Invalid page"
                    },
                    "404": {
                        "description": "page not found"
                    }
                }
            }
        },
        "/wx/addmerit": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post user merit",
                "operationId": "MeritController.post user merit",
                "parameters": [
                    {
                        "in": "query",
                        "name": "meritid",
                        "description": "The id of merit",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "description": "The title of merit_topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "description": "The content of merit_topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "active",
                        "description": "The actuve of merit_topic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "merit not found"
                    }
                }
            }
        },
        "/wx/testxorm": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "get usertopics by page",
                "operationId": "MeritController.get usertopics list",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.GetProductsPage"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articls not found"
                    }
                }
            }
        },
        "/wx/uploadmeritimg": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post user merit img",
                "operationId": "FroalaController.post merit user img",
                "parameters": [
                    {
                        "in": "query",
                        "name": "meritid",
                        "description": "The id of adminmerit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.SUCCESS"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/wxlogin/{id}": {
            "get": {
                "tags": [
                    "wx"
                ],
                "description": "post wx login",
                "operationId": "LoginController.post wx login",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "code",
                        "description": "The jscode of wxuser",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.success"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "articl not found"
                    }
                }
            }
        },
        "/wx/wxregist": {
            "post": {
                "tags": [
                    "wx"
                ],
                "description": "post wx regist",
                "operationId": "RegistController.post wx regist",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uname",
                        "description": "The username of ueser",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password of account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "The code of wx",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "app_version",
                        "description": "The app_version of wx",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.SaveUser"
                        }
                    },
                    "400": {
                        "description": "Invalid page supplied"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        }
    },
    "definitions": {
        ".AddAdminCategory": {
            "type": "object"
        },
        ".GetAdminCategory": {
            "type": "object"
        },
        ".GetProductsPage": {
            "type": "object"
        },
        ".SUCCESS": {
            "type": "object"
        },
        ".SaveUser": {
            "type": "object"
        },
        ".success": {
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "admin",
            "description": "CMSADMIN API\n"
        },
        {
            "name": "adminlog",
            "description": "CMSADMIN API\n"
        }
    ]
}